// Mocks generated by Mockito 5.4.4 from annotations
// in firebase_data_connect/test/src/network/grpc_transport_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;

import 'package:firebase_app_check/firebase_app_check.dart' as _i12;
import 'package:firebase_app_check_platform_interface/firebase_app_check_platform_interface.dart'
    as _i13;
import 'package:firebase_auth/firebase_auth.dart' as _i7;
import 'package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart'
    as _i6;
import 'package:firebase_core/firebase_core.dart' as _i5;
import 'package:firebase_data_connect/src/generated/connector_service.pb.dart'
    as _i16;
import 'package:firebase_data_connect/src/generated/connector_service.pbgrpc.dart'
    as _i15;
import 'package:grpc/service_api.dart' as _i8;
import 'package:grpc/src/client/call.dart' as _i4;
import 'package:grpc/src/client/connection.dart' as _i3;
import 'package:grpc/src/client/http2_channel.dart' as _i10;
import 'package:grpc/src/client/method.dart' as _i11;
import 'package:grpc/src/client/options.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i14;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeObject_0 extends _i1.SmartFake implements Object {
  _FakeObject_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChannelOptions_1 extends _i1.SmartFake
    implements _i2.ChannelOptions {
  _FakeChannelOptions_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClientConnection_2 extends _i1.SmartFake
    implements _i3.ClientConnection {
  _FakeClientConnection_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClientCall_3<Q1, R1> extends _i1.SmartFake
    implements _i4.ClientCall<Q1, R1> {
  _FakeClientCall_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseApp_4 extends _i1.SmartFake implements _i5.FirebaseApp {
  _FakeFirebaseApp_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserMetadata_5 extends _i1.SmartFake implements _i6.UserMetadata {
  _FakeUserMetadata_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultiFactor_6 extends _i1.SmartFake implements _i7.MultiFactor {
  _FakeMultiFactor_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIdTokenResult_7 extends _i1.SmartFake implements _i6.IdTokenResult {
  _FakeIdTokenResult_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserCredential_8 extends _i1.SmartFake
    implements _i7.UserCredential {
  _FakeUserCredential_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfirmationResult_9 extends _i1.SmartFake
    implements _i7.ConfirmationResult {
  _FakeConfirmationResult_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_10 extends _i1.SmartFake implements _i7.User {
  _FakeUser_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponseFuture_11<R> extends _i1.SmartFake
    implements _i8.ResponseFuture<R> {
  _FakeResponseFuture_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponseStream_12<R1> extends _i1.SmartFake
    implements _i8.ResponseStream<R1> {
  _FakeResponseStream_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_13<T> extends _i1.SmartFake implements _i9.Future<T> {
  _FakeFuture_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ClientChannel].
///
/// See the documentation for Mockito's code generation for more information.
class MockClientChannel extends _i1.Mock implements _i10.ClientChannel {
  MockClientChannel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Object get host => (super.noSuchMethod(
        Invocation.getter(#host),
        returnValue: _FakeObject_0(
          this,
          Invocation.getter(#host),
        ),
      ) as Object);

  @override
  int get port => (super.noSuchMethod(
        Invocation.getter(#port),
        returnValue: 0,
      ) as int);

  @override
  _i2.ChannelOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeChannelOptions_1(
          this,
          Invocation.getter(#options),
        ),
      ) as _i2.ChannelOptions);

  @override
  _i9.Stream<_i3.ConnectionState> get onConnectionStateChanged =>
      (super.noSuchMethod(
        Invocation.getter(#onConnectionStateChanged),
        returnValue: _i9.Stream<_i3.ConnectionState>.empty(),
      ) as _i9.Stream<_i3.ConnectionState>);

  @override
  _i3.ClientConnection createConnection() => (super.noSuchMethod(
        Invocation.method(
          #createConnection,
          [],
        ),
        returnValue: _FakeClientConnection_2(
          this,
          Invocation.method(
            #createConnection,
            [],
          ),
        ),
      ) as _i3.ClientConnection);

  @override
  _i9.Future<void> shutdown() => (super.noSuchMethod(
        Invocation.method(
          #shutdown,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> terminate() => (super.noSuchMethod(
        Invocation.method(
          #terminate,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i3.ClientConnection> getConnection() => (super.noSuchMethod(
        Invocation.method(
          #getConnection,
          [],
        ),
        returnValue:
            _i9.Future<_i3.ClientConnection>.value(_FakeClientConnection_2(
          this,
          Invocation.method(
            #getConnection,
            [],
          ),
        )),
      ) as _i9.Future<_i3.ClientConnection>);

  @override
  _i4.ClientCall<Q, R> createCall<Q, R>(
    _i11.ClientMethod<Q, R>? method,
    _i9.Stream<Q>? requests,
    _i4.CallOptions? options,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createCall,
          [
            method,
            requests,
            options,
          ],
        ),
        returnValue: _FakeClientCall_3<Q, R>(
          this,
          Invocation.method(
            #createCall,
            [
              method,
              requests,
              options,
            ],
          ),
        ),
      ) as _i4.ClientCall<Q, R>);
}

/// A class which mocks [FirebaseAppCheck].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAppCheck extends _i1.Mock implements _i12.FirebaseAppCheck {
  MockFirebaseAppCheck() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_4(
          this,
          Invocation.getter(#app),
        ),
      ) as _i5.FirebaseApp);

  @override
  set app(_i5.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Stream<String?> get onTokenChange => (super.noSuchMethod(
        Invocation.getter(#onTokenChange),
        returnValue: _i9.Stream<String?>.empty(),
      ) as _i9.Stream<String?>);

  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  _i9.Future<void> activate({
    _i13.WebProvider? webProvider,
    _i13.AndroidProvider? androidProvider = _i13.AndroidProvider.playIntegrity,
    _i13.AppleProvider? appleProvider = _i13.AppleProvider.deviceCheck,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #activate,
          [],
          {
            #webProvider: webProvider,
            #androidProvider: androidProvider,
            #appleProvider: appleProvider,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<String?> getToken([bool? forceRefresh]) => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [forceRefresh],
        ),
        returnValue: _i9.Future<String?>.value(),
      ) as _i9.Future<String?>);

  @override
  _i9.Future<void> setTokenAutoRefreshEnabled(
          bool? isTokenAutoRefreshEnabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #setTokenAutoRefreshEnabled,
          [isTokenAutoRefreshEnabled],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<String> getLimitedUseToken() => (super.noSuchMethod(
        Invocation.method(
          #getLimitedUseToken,
          [],
        ),
        returnValue: _i9.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #getLimitedUseToken,
            [],
          ),
        )),
      ) as _i9.Future<String>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i7.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get emailVerified => (super.noSuchMethod(
        Invocation.getter(#emailVerified),
        returnValue: false,
      ) as bool);

  @override
  bool get isAnonymous => (super.noSuchMethod(
        Invocation.getter(#isAnonymous),
        returnValue: false,
      ) as bool);

  @override
  _i6.UserMetadata get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: _FakeUserMetadata_5(
          this,
          Invocation.getter(#metadata),
        ),
      ) as _i6.UserMetadata);

  @override
  List<_i6.UserInfo> get providerData => (super.noSuchMethod(
        Invocation.getter(#providerData),
        returnValue: <_i6.UserInfo>[],
      ) as List<_i6.UserInfo>);

  @override
  String get uid => (super.noSuchMethod(
        Invocation.getter(#uid),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#uid),
        ),
      ) as String);

  @override
  _i7.MultiFactor get multiFactor => (super.noSuchMethod(
        Invocation.getter(#multiFactor),
        returnValue: _FakeMultiFactor_6(
          this,
          Invocation.getter(#multiFactor),
        ),
      ) as _i7.MultiFactor);

  @override
  _i9.Future<void> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<String?> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdToken,
          [forceRefresh],
        ),
        returnValue: _i9.Future<String?>.value(),
      ) as _i9.Future<String?>);

  @override
  _i9.Future<_i6.IdTokenResult> getIdTokenResult(
          [bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdTokenResult,
          [forceRefresh],
        ),
        returnValue: _i9.Future<_i6.IdTokenResult>.value(_FakeIdTokenResult_7(
          this,
          Invocation.method(
            #getIdTokenResult,
            [forceRefresh],
          ),
        )),
      ) as _i9.Future<_i6.IdTokenResult>);

  @override
  _i9.Future<_i7.UserCredential> linkWithCredential(
          _i6.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithCredential,
          [credential],
        ),
        returnValue: _i9.Future<_i7.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #linkWithCredential,
            [credential],
          ),
        )),
      ) as _i9.Future<_i7.UserCredential>);

  @override
  _i9.Future<_i7.UserCredential> linkWithProvider(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithProvider,
          [provider],
        ),
        returnValue: _i9.Future<_i7.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #linkWithProvider,
            [provider],
          ),
        )),
      ) as _i9.Future<_i7.UserCredential>);

  @override
  _i9.Future<_i7.UserCredential> reauthenticateWithProvider(
          _i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithProvider,
          [provider],
        ),
        returnValue: _i9.Future<_i7.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #reauthenticateWithProvider,
            [provider],
          ),
        )),
      ) as _i9.Future<_i7.UserCredential>);

  @override
  _i9.Future<_i7.UserCredential> reauthenticateWithPopup(
          _i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithPopup,
          [provider],
        ),
        returnValue: _i9.Future<_i7.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #reauthenticateWithPopup,
            [provider],
          ),
        )),
      ) as _i9.Future<_i7.UserCredential>);

  @override
  _i9.Future<void> reauthenticateWithRedirect(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithRedirect,
          [provider],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i7.UserCredential> linkWithPopup(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPopup,
          [provider],
        ),
        returnValue: _i9.Future<_i7.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #linkWithPopup,
            [provider],
          ),
        )),
      ) as _i9.Future<_i7.UserCredential>);

  @override
  _i9.Future<void> linkWithRedirect(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithRedirect,
          [provider],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i7.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i7.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue:
            _i9.Future<_i7.ConfirmationResult>.value(_FakeConfirmationResult_9(
          this,
          Invocation.method(
            #linkWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i9.Future<_i7.ConfirmationResult>);

  @override
  _i9.Future<_i7.UserCredential> reauthenticateWithCredential(
          _i6.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithCredential,
          [credential],
        ),
        returnValue: _i9.Future<_i7.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #reauthenticateWithCredential,
            [credential],
          ),
        )),
      ) as _i9.Future<_i7.UserCredential>);

  @override
  _i9.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> sendEmailVerification(
          [_i6.ActionCodeSettings? actionCodeSettings]) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEmailVerification,
          [actionCodeSettings],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i7.User> unlink(String? providerId) => (super.noSuchMethod(
        Invocation.method(
          #unlink,
          [providerId],
        ),
        returnValue: _i9.Future<_i7.User>.value(_FakeUser_10(
          this,
          Invocation.method(
            #unlink,
            [providerId],
          ),
        )),
      ) as _i9.Future<_i7.User>);

  @override
  _i9.Future<void> updateEmail(String? newEmail) => (super.noSuchMethod(
        Invocation.method(
          #updateEmail,
          [newEmail],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> updatePassword(String? newPassword) => (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [newPassword],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> updatePhoneNumber(
          _i6.PhoneAuthCredential? phoneCredential) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePhoneNumber,
          [phoneCredential],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDisplayName,
          [displayName],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> updatePhotoURL(String? photoURL) => (super.noSuchMethod(
        Invocation.method(
          #updatePhotoURL,
          [photoURL],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> updateProfile({
    String? displayName,
    String? photoURL,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {
            #displayName: displayName,
            #photoURL: photoURL,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i6.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyBeforeUpdateEmail,
          [
            newEmail,
            actionCodeSettings,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [ConnectorServiceClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectorServiceClient extends _i1.Mock
    implements _i15.ConnectorServiceClient {
  MockConnectorServiceClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.ResponseFuture<_i16.ExecuteQueryResponse> executeQuery(
    _i16.ExecuteQueryRequest? request, {
    _i4.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #executeQuery,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_11<_i16.ExecuteQueryResponse>(
          this,
          Invocation.method(
            #executeQuery,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i16.ExecuteQueryResponse>);

  @override
  _i8.ResponseFuture<_i16.ExecuteMutationResponse> executeMutation(
    _i16.ExecuteMutationRequest? request, {
    _i4.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #executeMutation,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_11<_i16.ExecuteMutationResponse>(
          this,
          Invocation.method(
            #executeMutation,
            [request],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<_i16.ExecuteMutationResponse>);

  @override
  _i4.ClientCall<Q, R> $createCall<Q, R>(
    _i11.ClientMethod<Q, R>? method,
    _i9.Stream<Q>? requests, {
    _i4.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$createCall,
          [
            method,
            requests,
          ],
          {#options: options},
        ),
        returnValue: _FakeClientCall_3<Q, R>(
          this,
          Invocation.method(
            #$createCall,
            [
              method,
              requests,
            ],
            {#options: options},
          ),
        ),
      ) as _i4.ClientCall<Q, R>);

  @override
  _i8.ResponseFuture<R> $createUnaryCall<Q, R>(
    _i11.ClientMethod<Q, R>? method,
    Q? request, {
    _i4.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$createUnaryCall,
          [
            method,
            request,
          ],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_11<R>(
          this,
          Invocation.method(
            #$createUnaryCall,
            [
              method,
              request,
            ],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseFuture<R>);

  @override
  _i8.ResponseStream<R> $createStreamingCall<Q, R>(
    _i11.ClientMethod<Q, R>? method,
    _i9.Stream<Q>? requests, {
    _i4.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$createStreamingCall,
          [
            method,
            requests,
          ],
          {#options: options},
        ),
        returnValue: _FakeResponseStream_12<R>(
          this,
          Invocation.method(
            #$createStreamingCall,
            [
              method,
              requests,
            ],
            {#options: options},
          ),
        ),
      ) as _i8.ResponseStream<R>);
}

/// A class which mocks [ResponseFuture].
///
/// See the documentation for Mockito's code generation for more information.
class MockResponseFuture<R> extends _i1.Mock implements _i8.ResponseFuture<R> {
  MockResponseFuture() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<Map<String, String>> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: _i9.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i9.Future<Map<String, String>>);

  @override
  _i9.Future<Map<String, String>> get trailers => (super.noSuchMethod(
        Invocation.getter(#trailers),
        returnValue: _i9.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i9.Future<Map<String, String>>);

  @override
  _i9.Stream<R> asStream() => (super.noSuchMethod(
        Invocation.method(
          #asStream,
          [],
        ),
        returnValue: _i9.Stream<R>.empty(),
      ) as _i9.Stream<R>);

  @override
  _i9.Future<R> catchError(
    Function? onError, {
    bool Function(Object)? test,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #catchError,
          [onError],
          {#test: test},
        ),
        returnValue: _i14.ifNotNull(
              _i14.dummyValueOrNull<R>(
                this,
                Invocation.method(
                  #catchError,
                  [onError],
                  {#test: test},
                ),
              ),
              (R v) => _i9.Future<R>.value(v),
            ) ??
            _FakeFuture_13<R>(
              this,
              Invocation.method(
                #catchError,
                [onError],
                {#test: test},
              ),
            ),
      ) as _i9.Future<R>);

  @override
  _i9.Future<S> then<S>(
    _i9.FutureOr<S> Function(R)? onValue, {
    Function? onError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #then,
          [onValue],
          {#onError: onError},
        ),
        returnValue: _i14.ifNotNull(
              _i14.dummyValueOrNull<S>(
                this,
                Invocation.method(
                  #then,
                  [onValue],
                  {#onError: onError},
                ),
              ),
              (S v) => _i9.Future<S>.value(v),
            ) ??
            _FakeFuture_13<S>(
              this,
              Invocation.method(
                #then,
                [onValue],
                {#onError: onError},
              ),
            ),
      ) as _i9.Future<S>);

  @override
  _i9.Future<R> whenComplete(_i9.FutureOr<dynamic> Function()? action) =>
      (super.noSuchMethod(
        Invocation.method(
          #whenComplete,
          [action],
        ),
        returnValue: _i14.ifNotNull(
              _i14.dummyValueOrNull<R>(
                this,
                Invocation.method(
                  #whenComplete,
                  [action],
                ),
              ),
              (R v) => _i9.Future<R>.value(v),
            ) ??
            _FakeFuture_13<R>(
              this,
              Invocation.method(
                #whenComplete,
                [action],
              ),
            ),
      ) as _i9.Future<R>);

  @override
  _i9.Future<R> timeout(
    Duration? timeLimit, {
    _i9.FutureOr<R> Function()? onTimeout,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #timeout,
          [timeLimit],
          {#onTimeout: onTimeout},
        ),
        returnValue: _i14.ifNotNull(
              _i14.dummyValueOrNull<R>(
                this,
                Invocation.method(
                  #timeout,
                  [timeLimit],
                  {#onTimeout: onTimeout},
                ),
              ),
              (R v) => _i9.Future<R>.value(v),
            ) ??
            _FakeFuture_13<R>(
              this,
              Invocation.method(
                #timeout,
                [timeLimit],
                {#onTimeout: onTimeout},
              ),
            ),
      ) as _i9.Future<R>);

  @override
  _i9.Future<void> cancel() => (super.noSuchMethod(
        Invocation.method(
          #cancel,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}
