name: e2e-fdc

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'website/**'
      - '**/example/**'
      - '**/flutterfire_ui/**'
      - '**.md'
  push:
    branches:
      - master
    paths-ignore:
      - 'docs/**'
      - 'website/**'
      - '**/example/**'
      - '**.md'

jobs:
  android:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938
      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af
        name: Install Node.js 20
        with:
          node-version: '20'
      - uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Firebase Emulator Cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9
        with:
          path: ~/.cache/firebase/emulators
          key: firebase-emulators-v3-fdc-${{ runner.os }}
          restore-keys: firebase-emulators-v3
      - uses: subosito/flutter-action@44ac965b96f18d999802d4b807e3256d5a3f9fa1
        with:
          channel: 'stable'
          cache: true
      - name: Setup PostgreSQL for Linux/macOS/Windows
        uses: ikalnytskyi/action-setup-postgres@v7
      - uses: bluefireteam/melos-action@c7dcb921b23cc520cace360b95d02b37bf09cdaa
        with:
          run-bootstrap: false
          melos-version: '5.3.0'
      - name: 'Bootstrap package'
        run: melos bootstrap --scope "firebase_data_connect*"
      - name: 'Install Tools'
        run: |
          sudo npm i -g firebase-tools
      - name: Start Firebase Emulator
        run: |
          cd ./packages/firebase_data_connect/firebase_data_connect/example 
          unset PGSERVICEFILE
          firebase experiments:enable dataconnect
          ./start-firebase-emulator.sh
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v4
      - name: AVD cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ runner.os }} 
      - name: Start AVD then run E2E tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          working-directory: 'packages/firebase_data_connect/firebase_data_connect/example'
          script: |
            flutter test integration_test/e2e_test.dart --dart-define=CI=true -d emulator-5554

  ios:
    runs-on: macos-14
    timeout-minutes: 45
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938
      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af
        name: Install Node.js 20
        with:
          node-version: '20'
      - uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Setup PostgreSQL for Linux/macOS/Windows
        uses: ikalnytskyi/action-setup-postgres@v7  
      - uses: hendrikmuhs/ccache-action@c92f40bee50034e84c763e33b317c77adaa81c92
        name: Xcode Compile Cache
        with:
          key: xcode-cache-${{ runner.os }}  
          max-size: 700M
      - uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9
        name: Pods Cache
        id: pods-cache
        with:
          path: tests/ios/Pods
          key: ${{ runner.os }}-fdc-pods-v3-${{ hashFiles('tests/ios/Podfile.lock') }}
          restore-keys: ${{ runner.os }}-ios-pods-v2
      - name: Firebase Emulator Cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9
        with:
          path: ~/.cache/firebase/emulators
          key: firebase-emulators-v3-fdc-${{ runner.os }}
          restore-keys: firebase-emulators-v3
      - uses: subosito/flutter-action@44ac965b96f18d999802d4b807e3256d5a3f9fa1
        with:
          channel: 'stable'
          cache: true
      - uses: bluefireteam/melos-action@c7dcb921b23cc520cace360b95d02b37bf09cdaa
        with:
          run-bootstrap: false
          melos-version: '5.3.0'
      - name: 'Bootstrap package'
        run: melos bootstrap --scope "firebase_data_connect*"
      - name: 'Install Tools'
        run: |
          sudo npm i -g firebase-tools
      - name: 'Build Application'
        working-directory: 'packages/firebase_data_connect/firebase_data_connect/example'
        run: |
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          export CCACHE_SLOPPINESS=clang_index_store,file_stat_matches,include_file_ctime,include_file_mtime,ivfsoverlay,pch_defines,modules,system_headers,time_macros
          export CCACHE_FILECLONE=true
          export CCACHE_DEPEND=true
          export CCACHE_INODECACHE=true
          ccache -s
          flutter build ios --no-codesign --simulator --debug --target=./integration_test/e2e_test.dart --dart-define=CI=true
          ccache -s
      - name: Start Firebase Emulator
        run: |
          sudo chown -R 501:20 "/Users/runner/.npm"
          cd ./packages/firebase_data_connect/firebase_data_connect/example 
          unset PGSERVICEFILE
          firebase experiments:enable dataconnect
          ./start-firebase-emulator.sh
      - name: 'E2E Tests'
        working-directory: 'packages/firebase_data_connect/firebase_data_connect/example'
        run: |
          # Boot simulator and wait for System app to be ready.
          # List of available simulators: https://github.com/actions/runner-images/blob/main/images/macos/macos-14-Readme.md#installed-simulators
          SIMULATOR="iPhone 15"
          xcrun simctl bootstatus "$SIMULATOR" -b
          xcrun simctl logverbose "$SIMULATOR" enable
          # Sleep to allow simulator to settle.
          sleep 15
          # Uncomment following line to have simulator logs printed out for debugging purposes.
          # xcrun simctl spawn booted log stream --predicate 'eventMessage contains "flutter"' &
          flutter test integration_test/e2e_test.dart -d "$SIMULATOR" --dart-define=CI=true

  web:
    runs-on: macos-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938
      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af
        name: Install Node.js 20
        with:
          node-version: '20'
      - uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Setup PostgreSQL for Linux/macOS/Windows
        uses: ikalnytskyi/action-setup-postgres@v7
      - uses: subosito/flutter-action@44ac965b96f18d999802d4b807e3256d5a3f9fa1
        with:
          channel: 'stable'
          cache: true
      - uses: bluefireteam/melos-action@c7dcb921b23cc520cace360b95d02b37bf09cdaa
        with:
          run-bootstrap: false
          melos-version: '5.3.0'
      - name: 'Bootstrap package'
        run: melos bootstrap --scope "firebase_data_connect*"
      - name: 'Install Tools'
        run: sudo npm i -g firebase-tools
      - name: Cache Firebase Emulator
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9
        with:
          path: ~/.cache/firebase/emulators
          key: firebase-emulators-v3-fdc-${{ runner.os }}
          restore-keys: firebase-emulators-v3
      - name: Start Firebase Emulator
        run: |
          sudo chown -R 501:20 "/Users/runner/.npm"
          cd ./packages/firebase_data_connect/firebase_data_connect/example 
          unset PGSERVICEFILE
          firebase experiments:enable dataconnect
          ./start-firebase-emulator.sh
      - name: 'E2E Tests'
        working-directory: 'packages/firebase_data_connect/firebase_data_connect/example'
        # Web devices are not supported for the `flutter test` command yet. As a
        # workaround we can use the `flutter drive` command. Tracking issue:
        # https://github.com/flutter/flutter/issues/66264
        run: |
          chromedriver --port=4444 --trace-buffer-size=100000 &
          flutter drive --target=./integration_test/e2e_test.dart --driver=./test_driver/integration_test.dart -d chrome --dart-define=CI=true | tee output.log
          # We have to check the output for failed tests matching the string "[E]"
          output=$(<output.log)
          if [[ "$output" =~ \[E\] ]]; then
          # You will see "All tests passed." in the logs even when tests failed.
          echo "All tests did not pass. Please check the logs for more information."
          exit 1
          fi
        shell: bash

